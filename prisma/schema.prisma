generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          String    @default("member")
  emailVerified DateTime?
  accounts      Account[] @relation("UserAccounts")
  orders        Order[]   @relation("UserOrders")
}


model Account {
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  id                String  @id @default(cuid())
  user              User    @relation("UserAccounts", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  category    String
  image       String
  stock       Int
  soldCount   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]  @relation("ProductOrders")
}

model Order {
  id         Int      @id @default(autoincrement())
  userId     Int
  productId  Int
  quantity   Int
  totalPrice Float
  status     String   @default("pending")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  product    Product  @relation("ProductOrders", fields: [productId], references: [id], onDelete: Cascade)
  user       User     @relation("UserOrders", fields: [userId], references: [id], onDelete: Cascade)
}
